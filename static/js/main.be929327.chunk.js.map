{"version":3,"sources":["hooks/useTheme.ts","config/constants/farms.ts","config/constants/endpoints.ts","utils/makeBatchRequest.ts","utils/wallet.ts","hooks/useAuth.ts","utils/getRpcUrl.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/teams.ts","config/constants/contracts.ts","utils/addressHelpers.ts","state/teams/helpers.ts","config/constants/campaigns.ts","hooks/useRefresh.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/web3React.ts","state/prices/index.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","config/constants/index.ts","components/Tags.tsx","utils/achievements.ts","state/predictions/index.ts","components/UnlockButton.tsx","components/PageLoader.tsx","hooks/usePersistState.ts","hooks/useHarvest.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useApprove.ts","hooks/useUnstake.ts","routerHistory.ts","utils/bigNumber.ts","utils/contractHelpers.ts","config/constants/types.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","utils/apr.ts","components/ApyCalculatorModal/index.tsx","state/index.ts","components/PageHeader/PageHeader.tsx","utils/formatBalance.ts","hooks/useWeb3.ts","state/actions.ts","hooks/useContract.ts","utils/callHelpers.ts","state/pools/helpers.ts","state/hooks.ts","config/index.ts","utils/multicall.ts","config/constants/pools.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","utils/web3.ts","config/localization/languages.ts","utils/compoundApyHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/Balance.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","hooks/useToast.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx","config/constants/nfts.ts","config/constants/tokens.ts"],"names":["useTheme","useContext","ThemeContext","isDark","toggleTheme","theme","StyledThemeContext","farms","pid","lpSymbol","lpAddresses","97","56","token","tokens","grp","quoteToken","usdt","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTIONS","REACT_APP_GRAPH_WS_PREDICTIONS","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","map","call","Promise","resolve","reject","add","request","err","result","execute","all","setupNetwork","a","provider","window","ethereum","chainId","parseInt","method","params","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","nodes","blockExplorerUrls","console","error","useAuth","dispatch","useAppDispatch","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","UnsupportedChainIdError","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","logout","profileClear","getNodeUrl","randomIndex","random","length","fetchFarms","farmsToFetch","farmConfig","lpAddress","getAddress","address","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","DEFAULT_TOKEN_DECIMAL","times","tokenAmount","BIG_TEN","pow","quoteTokenAmount","masterchefABI","info","totalAllocPoint","allocPoint","_hex","log","poolWeight","toJSON","tokenPriceVsQuote","multiplier","data","fetchFarmUserAllowances","account","masterChefAddress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","nonArchivedFarms","farmsConfig","filter","isArchivedPid","initialState","userData","allowance","loadArchivedFarmsData","userDataLoaded","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","findIndex","setLoadArchivedFarmsData","actions","fetchFarmsPublicDataAsync","getState","fetchArchived","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","teams","id","description","images","lg","md","sm","alt","ipfs","background","textColor","users","points","getCakeAddress","cake","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryAddress","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","teamData","onChainTeamData","Number","campaigns","type","title","badge","campaignMap","Map","campaign","set","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","DEFAULT_META","image","customMeta","StyledPage","styled","Container","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","eq","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","pageTitle","join","property","content","Page","children","props","getIdentifierKeyFromAddress","nftAddress","nftSource","Object","values","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","getNftByTokenId","Nfts","nft","includes","identifier","useSousStake","sousId","isUsingBnb","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","ifos","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","createAsyncThunk","nftSourcePromises","keys","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","extraReducers","builder","addCase","pending","fulfilled","association","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","rpcUrl","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","fetchPrices","response","updated_at","parseFloat","price","pricesSlice","lastUpdated","React","createContext","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","CACHE_KEY","ThemeContextProvider","isDarkUserSetting","getItem","JSON","parse","setIsDark","prevState","setItem","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","key","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","BIG_ZERO","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","UnlockButton","t","useTranslation","onPresentConnectModal","useWalletModal","onClick","Wrapper","PageLoader","usePersistState","initialValue","localStorageKey","valueFromLS","setValue","useHarvest","farmPid","onReward","harvest","useAllHarvest","farmPids","harvestPromises","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","currentLocale","fetchInitialLocales","setLanguage","language","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","languageContext","Error","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","onUnstake","useUnstake","createBrowserHistory","getContract","abi","web3","web3NoAccount","eth","Contract","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","pool","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","PoolIds","NftType","FlexLayout","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","apr","isNaN","isFinite","getFarmApr","poolLiquidityUsd","CAKE_PER_BLOCK","Grid","GridItem","ApyCalculatorModal","onDismiss","tokenPrice","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","getRoi","amountEarned","amountInvested","toFixed","maxWidth","freq","mt","fee","justifyContent","href","store","configureStore","devTools","reducer","achievementsReducer","block","blockReducer","farmsReducer","pools","poolsReducer","prices","pricesReducer","predictions","predictionsReducer","profile","profileReducer","teamsReducer","collectibles","collectiblesReducer","useDispatch","Outer","Box","colors","gradients","bubblegum","Inner","PageHeader","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","options","useWeb3","library","refEth","useRef","Web3","setweb3","current","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","transformUserData","stakingTokenBalance","pendingReward","transformPool","stakingLimit","rest","useFetchPublicData","fetchPoolsPublicDataAsync","fetchPoolsStakingLimitsAsync","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","useFarmUser","useLpTokenPrice","tokenPriceInUsd","useGetApiPrice","usePools","fetchPoolsUserDataAsync","useFetchProfile","fetchProfile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","useFetchPriceList","useGetApiPrices","usePriceBnbBusd","bnbBusdFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","identifiers","tokenIds","nftsInWallet","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","stakingToken","earningToken","CORE","sortOrder","isFinished","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","endBlock","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","code","languageList","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingLimitData","stakingTokenBalances","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","label","icon","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Balance","isDisabled","unit","previousValue","start","end","duration","separator","defaultProps","AprRow","isAutoVault","tooltipContent","useTooltip","placement","targetRef","tooltip","tooltipVisible","earningTokenPrice","isHighValueToken","Math","apyModalLink","useModal","onPresentApyModal","alignItems","ref","height","earningsPercentageToDisplay","scale","PromotedGradient","keyframes","StyledCard","Card","isPromotedPool","css","primaryBright","secondary","card","StyledCardInner","radii","ExpandedWrapper","Flex","ExpandedFooter","totalCakeInVault","shouldShowBlockCountdown","Boolean","blocksUntilStart","max","blocksRemaining","hasPoolStarted","flexDirection","small","ml","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","toLocaleLowerCase","isCakePool","src","ApprovalAction","stakingTokenContract","requestedApproval","setRequestedApproval","handleApprove","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","tokenSymbol","headerBackground","cardHeader","tokensymbol","as","external","StyledButton","Button","PercentageButton","mx","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","gt","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","multipliedBy","amountToStake","handleConfirmClick","style","textAlign","minWidth","onUserInput","input","convertedInput","percentage","floor","min","currencyValue","isWarning","onValueChanged","valueLabel","step","InlineBalance","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","gte","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","Text","CardActions","needsApproval","display","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","useRouteMatch","url","isExact","to","checked","onChange","Pools","path","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","exact","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","component","iterations","Providers","ReactDOM","render","StrictMode","document","getElementById","toastContext","transformProfileResponse","profileResponse","userId","isActive","getUsername","username","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","PANCAKE","MIXIE","variationId","video","webm","mp4","blur","bnb","projectLink","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one"],"mappings":"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","file":"static/js/main.be929327.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 1,\n    lpSymbol: 'GRP_USDT',\n    lpAddresses: {\n      97: '0x280e8Eaf10E9c5e39178a37bfdCDC3C1fb66f42d',\n      56: '0x3642b52519ba81fd8a204b306d2369a0cc1bc612',\n    },\n    token: tokens.grp,\n    quoteToken: tokens.usdt,\n  },\n]\n\nexport default farms\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTIONS = process.env.REACT_APP_GRAPH_API_PREDICTIONS\nexport const GRAPH_WS_PREDICTIONS = process.env.REACT_APP_GRAPH_WS_PREDICTIONS\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://testnet.bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\n\nconst useAuth = () => {\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError('Provider Error', 'No provider was found')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError('Authorization Error', 'Please authorize to access your account')\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n        await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBalanceLP)\n        .div(DEFAULT_TOKEN_DECIMAL)\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBalanceLP)\n        .div(BIG_TEN.pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n        try{\n          const [info, totalAllocPoint] = await multicall(masterchefABI, [\n            {\n              address: getMasterChefAddress(),\n              name: 'poolInfo',\n              params: [farmConfig.pid],\n            },\n            {\n              address: getMasterChefAddress(),\n              name: 'totalAllocPoint',\n            },\n          ]);\n\n          const allocPoint = new BigNumber(info.allocPoint._hex)\n          const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n        }catch(err){\n          console.log('fetchFarms.ts')\n          console.log(err);\n        }\n     \n\n          const [info, totalAllocPoint] = await multicall(masterchefABI, [\n            {\n              address: getMasterChefAddress(),\n              name: 'poolInfo',\n              params: [farmConfig.pid],\n            },\n            {\n              address: getMasterChefAddress(),\n              name: 'totalAllocPoint',\n            },\n          ]);\n\n          const allocPoint = new BigNumber(info.allocPoint._hex)\n          const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    },\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData, setLoadArchivedFarmsData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch, getState) => {\n  const fetchArchived = getState().farms.loadArchivedFarmsData\n  const farmsToFetch = fetchArchived ? farmsConfig : nonArchivedFarms\n  const farms = await fetchFarms(farmsToFetch)\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account: string) => async (dispatch, getState) => {\n  const fetchArchived = getState().farms.loadArchivedFarmsData\n  const farmsToFetch = fetchArchived ? farmsConfig : nonArchivedFarms\n  const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n  const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      pid: farmsToFetch[index].pid,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","export default {\n  masterChef: {\n    97: '0x0CBd9936c37Bbb4497f318b1485F2720c6298b55',\n    56: '0x4b6080917a8333D5DB16345642D9899e9A870d9f',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  multiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Grassroots People Swap',\n  description:\n    'The most popular AMM on BSC by user count! Earn GRP through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust.',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const customMeta: { [key: string]: PageMeta } = {\n  '/': {\n    title: 'Home | Grassroots People Swap',\n  },\n  '/competition': {\n    title: 'Trading Battle | Grassroots People Swap',\n  },\n  '/prediction': {\n    title: 'Prediction | PancakeSwap',\n  },\n  '/farms': {\n    title: 'Farms | Grassroots People Swap',\n  },\n  '/pools': {\n    title: 'Pools | Grassroots People Swap',\n  },\n  '/lottery': {\n    title: 'Lottery | PancakeSwap',\n  },\n  '/collectibles': {\n    title: 'Collectibles | PancakeSwap',\n  },\n  '/ifo': {\n    title: 'Initial Farm Offering | PancakeSwap',\n  },\n  '/teams': {\n    title: 'Leaderboard | PancakeSwap',\n  },\n  '/profile/tasks': {\n    title: 'Task Center | PancakeSwap',\n  },\n  '/profile': {\n    title: 'Your Profile | PancakeSwap',\n  },\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { customMeta, DEFAULT_META } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.eq(0)\n    ? ''\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n  const pageMeta = customMeta[pathname] || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\n// const cakeBnbLpToken: Token = {\n//   symbol: farms[1].lpSymbol,\n//   address: farms[1].lpAddresses,\n//   decimals: 18,\n// }\n\nconst ifos: Ifo[] = [\n  \n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon } from '@pancakeswap/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst ManualPoolTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Manual\n  </Tag>\n)\n\nconst CompoundingPoolTag = (props) => (\n  <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n    Auto\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { EN } from '../../config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from '../../config/localization/languages'\nimport translations from '../../config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_TEN = new BigNumber(10)\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  isV1: boolean\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'LOWB',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {earningTokenSymbol} {t('per')} $1000\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Box mb=\"28px\" maxWidth=\"280px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            `Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.`,\n            { freq: compoundFrequency.toLocaleString() },\n          )}\n        </Text>\n        {performanceFee > 0 && (\n          <Text mt=\"14px\" fontSize=\"12px\" color=\"textSubtle\">\n            {t(`All estimated rates take into account this pool's %fee%% performance fee`, { fee: performanceFee })}\n          </Text>\n        )}\n      </Box>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, setBlock } from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromSymbol(symbol)\n  const tokenPriceInUsd = useGetApiPrice(getAddress(farm.token.address))\n\n  return farm.lpTotalSupply && farm.lpTotalInQuoteToken\n    ? new BigNumber(getBalanceNumber(farm.lpTotalSupply)).div(farm.lpTotalInQuoteToken).times(tokenPriceInUsd).times(2)\n    : BIG_ZERO\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools.map(transformPool)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  \n  const prices = useGetApiPrices()\n  if (!prices) {\n    return null\n  }\n  const grp = 0.000527651;\n  if(address === \"0x4045C0c5F224F1bA2f70C2b31Cb29A25759d2b58\"){\n    return grp;\n  }\n\n  // if(address.toLowerCase() === \"0xdbc24f8e5b9ba00b40df14eb20282b3cca8564cb\"){\n  //   return 0.000000236267;\n  // }\n\n  // if(address.toLowerCase() === \"0xe7668e6465680021136b7bbcdaa463702bd7f668\"){\n  //   return 0.000000042232;\n  // }\n\n  // if(address.toLowerCase() === \"0xc99c1eeaca4edf3da6dc05ccf4a3d4ca6d507b03\"){\n  //   return 0.0000000905642;\n  // }\n\n  if(address.toLowerCase() === \"0xeff9698e39f6f84998e28ffaf659a1780256db1e\"){\n    return 0.000000148903;\n  }\n  \n  // if(address.toLowerCase() === \"0x21f9161f0a55b0668857b5b05751719b0c20cb3c\"){\n  //   return 0.0259025;\n  // }\n  if(address.toLowerCase() === \"0xa45d3247164a0f4fc02264fc3ec9bc9512967043\"){\n    return 0.00000240082;\n  }\n\n  // if(address.toLowerCase() === \"0x74b5656CDfc26BadB6B76d820565707347911071\"){\n  //   return 0.000221121;\n  // }\n\n  // if(address.toLowerCase() === \"0xbA27d0DA948566Db03f272dC7A90fAdA1f0ED1E3\"){\n  //   return 0.0000323066;\n  // }\n\n  if(address.toLowerCase() === \"0x5150eabe0b11751c2800060f1c53cba268d0ac96\"){\n    return 0.000000313567;\n  }\n\n  if(address.toLowerCase() === \"0xd5755285cc67282e0147e5dc79be1ea420b18883\"){\n    return 658260 * grp;\n  }\n\n  if(address.toLowerCase() === \"0x506235012ece5a24c96cf4350bf968d2027d3dc3\"){\n    return 0.00000785444;\n  }\n\n  if(address.toLowerCase() === \"0xf22082461d6ac5c262b7b0ef5182699c1e0a43df\"){\n    return 0.000000844276;\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(1)\n  return bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const cakeBnbFarm = useFarmFromPid(0)\n  // const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? new BigNumber(cakeBnbFarm.tokenPriceVsQuote) : BIG_ZERO\n  const cakeBusdPrice = new BigNumber(0.000001);\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(2000)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const BASE_URL = 'https://swap.grloves.club'\nexport const BASE_EXCHANGE_URL = 'https://pancake.kiemtienonline360.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://testnet.bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.grp,\n    earningToken: tokens.grp,\n    contractAddress: {\n      97: '0x0CBd9936c37Bbb4497f318b1485F2720c6298b55',\n      56: '0x4b6080917a8333D5DB16345642D9899e9A870d9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '300',\n    sortOrder: 1,\n    isFinished: false,\n  },\n\n\n]\nexport default pools\n","import BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport interface Farm extends FarmConfig {\n  tokenAmount?: BigNumber\n  quoteTokenAmount?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface PoolsState {\n  data: Pool[]\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// API Price State\nexport interface PriceApiList {\n  /* eslint-disable camelcase */\n  [key: string]: {\n    name: string\n    symbol: string\n    price: string\n    price_BNB: string\n  }\n}\n\nexport interface PriceApiListThunk {\n  /* eslint-disable camelcase */\n  [key: string]: number\n}\n\nexport interface PriceApiResponse {\n  /* eslint-disable camelcase */\n  updated_at: string\n  data: PriceApiList\n}\n\nexport interface PriceApiThunk {\n  /* eslint-disable camelcase */\n  updated_at: string\n  data: PriceApiListThunk\n}\n\nexport interface PriceState {\n  isLoading: boolean\n  lastUpdated: string\n  data: PriceApiListThunk\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  prices: PriceState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTIONS } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTIONS,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTIONS,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTIONS,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTIONS,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pt-BR': PTBR,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: number, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: number, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: number, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: number, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  // {\n  //   label: 'Trade',\n  //   icon: 'TradeIcon',\n  //   items: [\n  //     {\n  //       label: 'Exchange',\n  //       href: 'https://pancake.kiemtienonline360.com/#/swap',\n  //     },\n  //     {\n  //       label: 'Liquidity',\n  //       href: 'https://pancake.kiemtienonline360.com/#/pool',\n  //     },\n  //     {\n  //       label: 'LP Migration',\n  //       href: 'https://v1pancake.kiemtienonline360.com/#/migrate',\n  //     },\n  //     {\n  //       label: 'V1 Liquidity (Old)',\n  //       href: 'https://v1pancake.kiemtienonline360.com/#/pool',\n  //     },\n  //   ],\n  // },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: 'Prediction',\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  //   status: {\n  //     text: 'BETA',\n  //     color: 'warning',\n  //   },\n  // },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'Collectibles',\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: 'Team Battle',\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: 'Teams & Profile',\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: 'Leaderboard',\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: 'Task Center',\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: 'Your Profile',\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Info',\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: 'Overview',\n  //       href: 'https://pancakeswap.info',\n  //     },\n  //     {\n  //       label: 'Tokens',\n  //       href: 'https://pancakeswap.info/tokens',\n  //     },\n  //     {\n  //       label: 'Pairs',\n  //       href: 'https://pancakeswap.info/pairs',\n  //     },\n  //     {\n  //       label: 'Accounts',\n  //       href: 'https://pancakeswap.info/accounts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'IFO',\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: 'More',\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: 'Contact',\n  //       href: 'https://docs.pancakeswap.finance/contact-us',\n  //     },\n  //     {\n  //       label: 'Voting',\n  //       href: 'https://voting.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: 'Github',\n  //       href: 'https://github.com/pancakeswap',\n  //     },\n  //     {\n  //       label: 'Docs',\n  //       href: 'https://docs.pancakeswap.finance',\n  //     },\n  //     {\n  //       label: 'Blog',\n  //       href: 'https://pancakeswap.medium.com',\n  //     },\n  //     {\n  //       label: 'Merch',\n  //       href: 'https://pancakeswap.creator-spring.com/',\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd,  } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  // const { profile } = useProfile()\n  const { currentLanguage, setLanguage } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      // profile={{\n      //   username: profile?.username,\n      //   image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n      //   profileLink: '/profile',\n      //   noProfileLink: '/profile',\n      //   showPip: !profile?.username,\n      // }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n  bold?: boolean\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, bold, ...props }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text bold={bold} color={isDisabled ? 'textDisabled' : color} fontSize={fontSize} {...props}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApr } from 'utils/apr'\nimport { getAddress } from 'utils/addressHelpers'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\nimport { useGetApiPrice } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\n\ninterface AprRowProps {\n  pool: Pool\n  stakingTokenPrice: number\n  isAutoVault?: boolean\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({\n  pool,\n  stakingTokenPrice,\n  isAutoVault = false,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, totalStaked, isFinished, tokenPerBlock } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-end' })\n\n  const earningTokenPrice = useGetApiPrice(earningToken.address ? getAddress(earningToken.address) : '')\n  const apr = getPoolApr(\n    stakingTokenPrice,\n    earningTokenPrice,\n    getBalanceNumber(totalStaked, stakingToken.decimals),\n    parseFloat(tokenPerBlock),\n  )\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  const earningsPercentageToDisplay = () => {\n    if (isAutoVault) {\n      const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n      const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n        numberOfDays: 365,\n        farmApr: apr,\n        tokenPrice: earningTokenPrice,\n        roundingDecimals,\n        compoundFrequency,\n        performanceFee,\n      })\n      return getRoi({\n        amountEarned: tokenEarnedPerThousand365D,\n        amountInvested: oneThousandDollarsWorthOfToken,\n      })\n    }\n    return apr\n  }\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={`${t('Get')} ${stakingToken.symbol}`}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={isHighValueToken ? 4 : 2}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? t('APY') : t('APR')}:</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay()}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nexport const StyledCard = styled(Card)<{ isPromotedPool?: boolean; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromotedPool, theme }) =>\n    isPromotedPool\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n          animation: ${PromotedGradient} 3s ease infinite;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)<{ isPromotedPool?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  // MetamaskIcon,\n  Text,\n  TooltipText,\n  // LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  // Button,\n} from '@pancakeswap/uikit'\n// import { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock } from 'state/hooks'\nimport { Pool } from 'state/types'\n// import { getAddress,  } from 'utils/addressHelpers'\n// import { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n  performanceFee?: number\n  isAutoVault?: boolean\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({\n  pool,\n  // account,\n  performanceFee = 0,\n  isAutoVault = false,\n  totalCakeInVault,\n}) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const { stakingToken, totalStaked, startBlock, endBlock, isFinished,  } = pool\n\n  // const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  // const poolContractAddress = getAddress(contractAddress)\n  // const cakeVaultContractAddress = getCakeVaultAddress()\n  // const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  // const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-end' },\n  )\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked:')}</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance\n                fontSize=\"14px\"\n                value={\n                  isAutoVault\n                    ? getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n                    : getBalanceNumber(totalStaked, stakingToken.decimals)\n                }\n              />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance\n                color=\"primary\"\n                fontSize=\"14px\"\n                value={hasPoolStarted ? blocksRemaining : blocksUntilStart}\n                decimals={0}\n              />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small>\n              {t('blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      {/* <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex> */}\n      {/* {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )} */}\n      {/* {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              Add to Metamask\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )} */}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip, Box } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  performanceFee?: number\n  isAutoVault?: boolean\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({\n  pool,\n  account,\n  performanceFee = 0,\n  isAutoVault = false,\n  totalCakeInVault,\n}) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-end',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Box ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Box>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && (\n        <ExpandedFooter\n          pool={pool}\n          account={account}\n          performanceFee={performanceFee}\n          isAutoVault={isAutoVault}\n          totalCakeInVault={totalCakeInVault}\n        />\n      )}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string; isPromotedPool?: boolean }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme, isPromotedPool }) =>\n    isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  isPromotedPool?: boolean\n}> = ({\n  earningTokenSymbol,\n  stakingTokenSymbol,\n  isFinished = false,\n  isAutoVault = false,\n  isStaking = false,\n  isPromotedPool = false,\n}) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `cake-cakevault.svg`\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return `${t('Auto')}`\n    }\n    if (isCakePool) {\n      // manual cake\n      return `${t('Manual')}`\n    }\n    // all other pools\n    return `${t('Earn')}`\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return `${t('Automatic restaking')}`\n    }\n    if (isCakePool) {\n      return `${t('Earn CAKE, stake CAKE')}`\n    }\n    return `${t('Stake')} ${stakingTokenSymbol}`\n  }\n\n  return (\n    <Wrapper isPromotedPool={isPromotedPool} isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useState, useCallback } from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      if (txHash) {\n        toastSuccess(`${t('Contract Enabled')}`, `${t(`You can now stake in the ${earningToken.symbol} pool!`)}`)\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(\n          `${t('Error')}`,\n          `${t(`Please try again. Confirm the transaction and make sure you are paying enough gas!`)}`,\n        )\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError('Error', e?.message)\n    }\n  }, [onApprove, setRequestedApproval, toastSuccess, toastError, t, earningToken])\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={`${tokenSymbol} ${t('required')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %tokensymbol% balance', { tokensymbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t(`You’ll need %tokensymbol% to stake in this pool!`, { tokensymbol: tokenSymbol })}</Text>\n      <Text>\n        {t(`Buy some %tokensymbol%, or make sure your %tokensymbol% isn’t in another pool or LP.`, {\n          tokensymbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t(`Your ${earningToken.symbol} earnings have also been harvested to your wallet!`),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(`${t('Staked')}!`, t(`Your ${stakingToken.symbol} funds have been staked in the pool!`))\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={`~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        Balance: {getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals)}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>MAX</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get')} {stakingToken.symbol}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst InlineBalance = styled(Balance)`\n  display: inline;\n`\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              ~\n              <InlineBalance\n                fontSize=\"12px\"\n                color=\"textSubtle\"\n                decimals={2}\n                value={stakedTokenDollarBalance}\n                unit=\" USD\"\n              />\n            </Text>\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t(`Your ${earningToken.symbol} earnings have been re-invested into the pool!`),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(`${t('Harvested')}!`, t(`Your ${earningToken.symbol} earnings have been sent to your wallet!`))\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport { useGetApiPrice } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst InlineBalance = styled(Balance)`\n  display: inline;\n`\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenPrice = useGetApiPrice(earningToken.address ? getAddress(earningToken.address) : '')\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                ~\n                {hasEarnings ? (\n                  <InlineBalance\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                ) : (\n                  '0 USD'\n                )}\n              </Text>\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n  stakingTokenPrice: number\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance, stakingTokenPrice }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t(`earned`)}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t(`stake`)}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t(`staked`) : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakingTokenPrice={stakingTokenPrice}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useGetApiPrice } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  const stakingTokenPrice = useGetApiPrice(stakingToken.address ? getAddress(stakingToken.address) : '')\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={`${t('Finished')}`} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} stakingTokenPrice={stakingTokenPrice} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} stakingTokenPrice={stakingTokenPrice} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\n// import styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  // Link as UiKitLink,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\n// const ButtonText = styled(Text)`\n//   display: none;\n//   ${({ theme }) => theme.mediaQueries.lg} {\n//     display: block;\n//   }\n// `\n\n// const StyledLink = styled(UiKitLink)`\n//   width: 100%;\n\n//   &:hover {\n//     text-decoration: none;\n//   }\n// `\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"32px\">\n      <Flex alignItems=\"center\" flexDirection={['column', null, 'row', null]}>\n        <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to={`${url}`}>\n            {t('Live')}\n          </ButtonMenuItem>\n          <NotificationDot show={hasStakeInFinishedPools}>\n            <ButtonMenuItem as={Link} to={`${url}/history`}>\n              {t('Finished')}\n            </ButtonMenuItem>\n          </NotificationDot>\n        </ButtonMenu>\n        <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n          <Text ml=\"8px\">{t('Staked only')}</Text>\n        </Flex>\n      </Flex>\n      {/* <Flex ml=\"24px\" alignItems=\"center\" justifyContent=\"flex-end\">\n        <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n          <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n            <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n              {t('Help')}\n            </ButtonText>\n            <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n          </Button>\n        </StyledLink>\n      </Flex> */}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport PoolCard from './components/PoolCard'\n// import CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\n// import BountyCard from './components/BountyCard'\n\nconst Pools: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { currentBlock } = useBlock()\n  const [stakedOnly, setStakedOnly] = usePersistState(false, 'pancake_pool_staked')\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\n    [currentBlock, pools],\n  )\n  const stakedOnlyFinishedPools = useMemo(\n    () => finishedPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  // This pool is passed explicitly to the cake vault\n  // const cakePoolData = useMemo(() => openPools.find((pool) => pool.sousId === 0), [openPools])\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, 'row']}>\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Simply stake tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          {/* <Flex height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <BountyCard />\n          </Flex> */}\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolTabButtons\n          stakedOnly={stakedOnly}\n          setStakedOnly={setStakedOnly}\n          hasStakeInFinishedPools={hasStakeInFinishedPools}\n        />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            <>\n              {/* <CakeVaultCard pool={cakePoolData} showStakedOnly={stakedOnly} /> */}\n              {stakedOnly\n                ? orderBy(stakedOnlyOpenPools, ['sortOrder']).map((pool) => (\n                    <PoolCard key={pool.sousId} pool={pool} account={account} />\n                  ))\n                : orderBy(openPools, ['sortOrder']).map((pool) => (\n                    <PoolCard key={pool.sousId} pool={pool} account={account} />\n                  ))}\n            </>\n          </Route>\n          <Route path={`${path}/history`}>\n            {stakedOnly\n              ? orderBy(stakedOnlyFinishedPools, ['sortOrder']).map((pool) => (\n                  <PoolCard key={pool.sousId} pool={pool} account={account} />\n                ))\n              : orderBy(finishedPools, ['sortOrder']).map((pool) => (\n                  <PoolCard key={pool.sousId} pool={pool} account={account} />\n                ))}\n          </Route>\n        </FlexLayout>\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0x7ef95a0fee0dd31b22626fa2e10ee6a223f8a684',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n   grp: {\n    symbol: 'GRP',\n    address: {\n      56: '0xf57076bda88d9470ee7dad37ae0d5e85b7ab73ec',\n      97: '0x4045C0c5F224F1bA2f70C2b31Cb29A25759d2b58',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n\n}\n\nexport default tokens\n"],"sourceRoot":""}